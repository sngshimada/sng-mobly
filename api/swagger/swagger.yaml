swagger: "2.0"
info:
  version: "0.5.4"
  title: Integração SugarCRM - Mobly
  description:  0tbd validar a informação, 0del talvez seja desnecessário em duas vias
host: tbd
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: customer
    description: Requisições que retornam informações do cliente Mobly
  - name: processes
    description: Requisições que retornam informações de processos
  - name: syncronous
    description: Operação síncrona
  - name: asyncronous
    description: Operação assíncrona
paths:
  #block start
  #view do customer apenas, apagar
  /customer/{customerKey}:
    get:
      tags:
        - customer
        - syncronous
      operationId: getCustomer
      parameters:
        - name: customerKey
          in: path
          description: CPF ou CNPJ
          required: true
          type: string
      responses:
        200:
          description: Customer OK
          schema:
            $ref: "#/definitions/get_customer"
        404:
          description: Error
          schema:
            $ref: "#/definitions/stdErroMessage"
    put:
      deprecated: true
      tags:
        - customer
        - syncronous
      operationId: updateCustomer
      parameters:
        - name: customerKey
          in: path
          description: CPF ou CNPJ
          required: true
          type: string
        - name: customer_updated
          in: body
          description: Campos a serem enviados do Customer, do CRM para o BOB
          required: true
          schema:
            $ref: "#/definitions/update_customer"
      responses:
        200:
          description: Updated OK
        404:
          description: Error
          schema:
            $ref: "#/definitions/stdErroMessage"
  /customerAddress/{customerKey}:
    get:
      tags:
        - customer
        - syncronous
      operationId: getCustomerAddress
      parameters:
        - name: customerKey
          in: path
          description: CPF ou CNPJ
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/get_customer_address"
    put:
      deprecated: true
      tags:
        - customer
        - syncronous
      operationId: updateCustomerAddress
      parameters:
        - name: customerKey
          in: path
          description: CPF ou CNPJ
          required: true
          type: string
        - name: customer_address_updated
          in: body
          description: Campos a serem enviados do Customer Address, do CRM para o BOB
          required: true
          schema:
            $ref: "#/definitions/update_customer_address"
      responses:
        200:
          description: Updated OK
        404:
          description: Error
          schema:
            $ref: "#/definitions/stdErroMessage"
  #block end
  /customerCart/{customerKey}:
    get:
      tags:
        - customer
        - asyncronous
      summary: Consulta de carrinhos
      description: Retorna os itens do carrinho do cliente que foi passado o identificador.
      operationId: getCustomerCart
      parameters:
        - name : customerKey
          in: path
          description: CPF ou CNPJ
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/cartResponse"
        400:
          description: Error
          schema:
            $ref: "#/definitions/stdErroMessage"
  /customerRecommendation/{customerKey}:
    get:
      tags:
        - customer
        - asyncronous
      summary: Consulta de recomendação
      description: Retorna três (3) itens recomendados para oferecer na venda para o Customer
      operationId: getCustomerRecommendation
      parameters:
        - name: customerKey
          in: path
          description: CPF ou CNPJ
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/itemsRecommendation"
        400:
          description: Error
          schema:
            $ref: "#/definitions/stdErroMessage"
  /customerMetrics/{customerKey}:
    get:
      tags:
        - customer
        - asyncronous
      summary: Consulta de métricas
      description: Retorna os indicadores do cliente, as métricas que são enviadas dentro do array podem ter campos adicionados de acordo com a necessidade.Importante anotar que a melhor prática é deixar os campos retornados marcados como não obrigatório do lado do Sugar para manter a flexibilidade de se trabalhar com quaisqer pares de  chaves/valores que forem enviados
      operationId: getCustomerMetrics
      parameters:
        - name: customerKey
          in: path
          description: CPF ou CNPJ
          required: true
          type: string
        - name: dashletName
          in: query
          description: Identificador da dashlet que está dando request
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/customerMetrics"
        400:
          description: Cliente não encontrado
          schema:
            $ref: "#/definitions/stdErroMessage"
  /orderRebate:
    get:
      tags: 
        - processes
        - syncronous
      summary: Consulta de valor de rebate
      description: Envia para o INO os itens que precisam de avaliação para solicitar o rebate, o INO retorna o valor máximo do rebate que pode ser oferecido
      operationId: getOrderRebate
      parameters:
        - name: order_evaluted
          in: body
          description: Objeto com os itens que devem ser avaliados
          required: true
          schema:
            $ref: "#/definitions/order_evaluated"
      responses:
        200:
          description: Sucess
          schema:
            $ref: "#/definitions/order_evaluated_value"
        400:
          description: Error
          schema:
            $ref: "#/definitions/stdErroMessage"
  /rebateValueApproval:
    post:
      tags:
        - processes
        - syncronous
      summary: Pedido de aprovação/registro no INO de rebate
      description: Envia para o INO o valor do rebate escolhido pelo atendente e aguarda a confirmação por parte do INO
      operationId: postRebateValueApproval
      parameters:
        - name: rebate
          in: body
          description: Objeto com os items do rebate e o valor do rebate acordado com o cliente
          required: true
          schema:
            $ref: "#/definitions/rebate"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/rebate_confirmation"
        400:
          description: Error
          schema:
            $ref: "#/definitions/stdErroMessage"
definitions:
  stdErroMessage:
    description: Mensagem de erro a ser usada nas integrações
    type: object
    properties:
      response_status:
        type: string
        description: Indica o código do erro, podemos convencionar a usar os códigos HTTP 400/500 para generalizar
        enum:
          - 400
          - 500
      request_id:
        type: string
        description: Enviar nesse campo o ID da requisição, por exemplo, se for consulta de pedido enviar o ID do pedido, se for de cliente enviar o do cliente, etc
      message:
        type: string
        description: Nesse campo será descrito o erro que aconteceu
  cartResponse:
    type: object
    properties:
      cart_id:
        type: string
      cart_date:
        type: string
        format: date
      cart_itens:
        type: array
        maxLength: 5
        minLength: 0
        items:
          $ref: "#/definitions/cart_itens"
  cart_itens:
    type: object
    properties:
      cart_item_sku:
        type: string
      cart_item_sku_description:
        type: string
      cart_item_sku_color:
        type: string
      cart_item_sku_prev_delivery:
        type: string
        format: date
      cart_item_sku_price:
        type: number
        format: float
      cart_item_sku_img:
        type: string
  itemsRecommendation:
    type: object
    properties:
      customer_id:
        type: string
        description: ID do customer
      itemsRecommended:
        type: array
        description: Itens recomendados para venda ao Customer
        minLength: 0
        maxLength: 3
        items:
          $ref: "#/definitions/itemsRecommended"
  itemsRecommended:
    type: object
    properties:
      item_name:
        type: string
      item_sku:
        type: string
      item_img:
        type: string
        description: URL do thumbnail do item
      item_factor:
        type: number
        format: float
        description: Porcentagem de eventual compra
  customerMetrics:
    type: object
    properties:
      cst_mtrc_timestamp:
          type: string
          format: date-time
      cst_mtrc_customer_id:
        type: string
        description: Código identificador do cliente
      cst_mtrc_customerMetrics:
        type: array
        description: Métricas enviadas
        minLength: 0
        maxLength: 10
        items:
          $ref: "#/definitions/cst_mtrc_customerMetrics"
  cst_mtrc_customerMetrics:
    type: object
    description: Lista de indicadores por dashlet
    properties:
      cst_mtrc_type:
        type: string
        description: Indica qual o formato que as informações serão renderizadas
      customerMetric_label:
        description: Nome do campo
        type: string
      customerMetric_info:
        description: tbd
        type: string
      customerMetric_value:
        description: Valor
        type: number
        format: float
      customerMetric_total:
        description: Valor total
        type: number
        format: float
  order_evaluated:
    type: object
    description: Itens enviados para o INO para obter a avaliação do rebate
    properties:
      order_id:
        description: ID do pedido
        type: string
      order_items:
        description: Items que são enviados para o INO para serem avaliados
        type: array
        items:
          $ref: "#/definitions/order_items"
  order_items:
    type: object
    description: Items que são enviados para o INO para serem avaliados
    properties:
      order_items_id:
        description: ID do item
        type: string
      order_items_evaluation:
        type: string
        description: Avaliação do item, depende do que for passado no status
        enum:
          - 
          - Avaria
          - Sucata
          - Perfeito Estado
  order_evaluated_value:
    type: object
    description: Retorno do INO com o valor total do rebate
    properties:
      order_id:
        description: ID do pedido
        type: string
      order_evaluated_value_total:
        description: Valor total do rebate
        type: number
        format: float
  rebate:
    type: object
    description: Objeto com os items do rebate e o valor do rebate acordado com o cliente
    properties:
      order_id: 
        description: ID do pedido
        type: string
      sugar_crm_user_login:
        description: Login do usuário que está pedindo o rebate
        type: string
      rebate_total: 
        description: Valor do rebate
        type: number
        format: float
      rebate_order_items:
        type: array
        items:
          $ref: "#/definitions/rebate_order_items"
  rebate_order_items:
    type: object
    description: Lista dos items que foram avaliados
    properties:
      rebate_order_items_id:
        description: ID do item
        type: string
  rebate_confirmation:
    type: object
    description: Confirmação do INO que o rebate foi registrado
    properties:
      response_status:
        description: Código HTTP de resposta
        type: string
      order_id:
        description: ID do pedido
        type: string
      message:
        description: Mensagem de confirmação
        type: string
  # get_customer:
  #   type: object
  #   description: Campos mapeados em https://docs.google.com/spreadsheets/d/1gyaxrMZ0b_wWDGXxGXdc_lq_MbNiAf8FFAyiQzYmfKA/, os nomes dos campos vão seguir o que foi escrito na planilha
  #   properties:
  #     id_customer:
  #       description: Identificador do cliente
  #       type: string
  #     fk_store:
  #       description: 0del Identificador da loja de origem do customer, no documento cita que só existe o valor 1, porém buscando no banco identifiquei mais 5 valores possíveis que estão preenchidos, se é um campo de origem talvez não fosse necessário atualizar o mesmo, no enum somente as que existem um registro relacionado de customer
  #       type: string
  #       enum:
  #         - 1 [Mobly]
  #         - 3 [Mercado Livre]
  #         - 4 [Webcasas]
  #         - 6 [NovaCom]
  #         - 7 [Walmart]
  #         - 10 [CSU]
  #     type:
  #       description: PF ou PJ
  #       type: integer
  #       enum:
  #         - 1
  #         - 2
  #     email:
  #       description: E-mail do customer, é UNIQUE dentro do banco
  #       type: string
  #       maxLength: 255
  #     is_confirmed:
  #       description: 0tbd Validação se precisa ser usado, no banco somente valores 0 e 1
  #       type: integer
  #       enum:
  #         - 0
  #         - 1
  #     tax_identification:
  #       description: Número do documento do customer, formato {xxx.xxx.xxx-xx}
  #       type: string
  #       maxLength: 64
  #       pattern: \d{3}.\d{3}.\d{3}-\d{2}
  #     first_name:
  #       description: Nome do customer
  #       type: string
  #       maxLength: 255
  #     last_name:
  #       description: Sobrenome do customer
  #       type: string
  #       maxLength: 255
  #     birthday:
  #       description: 0tbd confirmar no banco o formato Data de nascimento do customer. Formato {aaaa-mm-dd}
  #       type: string
  #       format: date
  #       maxLength: 10
  #       pattern: \d{4}-\d{2}-\d{2}
  #     gender:
  #       description: 0tbd confirmar no banco assumindo agora que é string Sexo do customer
  #       type: string
  #       maxLength: 6
  #       enum:
  #         - male
  #         - female
  #     company_tax_identification:
  #       description: CNPJ do customer. Formato {xx.xxx.xxx/xxxx-xx}
  #       type: string
  #       maxLength: 64
  #       pattern: \d{2}.\d{3}.\d{3}\/\d{4}-\d{2}
  #     legal_name: 
  #       description: Razão social
  #       type: string
  #       maxLength: 255
  #     fantasy_name:
  #       description: Nome fantasia
  #       type: string
  #       maxLength: 255
  #     state_tax_number:
  #       description: Inscrição estadual, formatos variados de valor
  #       type: string
  #       maxLength: 255
  #     state_tax_number_free:
  #       description: Flag para isento ou não de IE
  #       type: integer
  #       enum:
  #         - 0
  #         - 1
  #     fk_customer_address_region:
  #       description: FK para o estado (customer_address_region) do customer
  #       type: string
  #       maxLength: 10
  #     id_facebook:
  #       description: Capta o id do cliente no facebook. Porem não estamos carregando a informação
  #       type: string
  #       maxLength: 255
  #     sms_subscription:
  #       description: Indica se o customer quer ou não receber sms
  #       type: integer
  #       enum:
  #         - 0
  #         - 1
  #     enable_oneclickbuy:
  #       description: Habilitação da função de One Click Buy pelo usuário
  #       type: integer
  #       enum:
  #         - 0
  #         - 1
  #     fk_customer_status_lojamobly:
  #       description: Habilitar o customer também no Atacarejo. Campo apenas disponível no BOB para o Atacarejo, FK para customer_status_lojamobly
  #       type: string
  #       enum:
  #           - 1 not applied
  #           - 2 [active]
  #           - 3 [inactive]
  #           - 4 [pending]
  #           - 5 [declined]
  #     created_at:
  #       description: Data de criação do customer
  #       type: string
  #       format: date-time
  #     updated_at:
  #       description: Data de atualização do customer
  #       type: string
  #       format: date-time
  #     fk_customer_status:
  #       description: 0tbd valores Status do cliente (Ativo/Inativo/Bloqueado). Cliente nasce ativo. Bloqueado é utilizado para clientes com fraude etc
  #       type: string
  #       enum:
  #         - 1 [active]
  #         - 2 [inactive]
  #         - 3 [blocked]
  #     id_customer_status:
  #       description: ID que identifica qual o status do cliente; origem = customer_status
  #       type: string
  #       enum:
  #         - 1 [active]
  #         - 2 [inactive]
  #         - 3 [blocked]
  #     customer_status_name:
  #       description: Nome do status; origem = customer_status; nome no banco = name
  #       type: string
  #       enum:
  #         - active
  #         - inactive
  #         - blocked
  #     id_customer_status_history:
  #       description: ID da tabela de atualização de status de um cliente; origem = customer_status_history
  #       type: string
  #       maxLength: 10
  #     fk_customer:
  #       description: 0del a chave de ID do cliente já é obtida na tabela customer ID do customer que está atualizando o status; origem = customer_status_history
  #       type: string
  #       maxLength: 10
  #     customer_status_history_fk_customer_status:
  #       description: fk ID do status da tabela de status; origem = customer_status_history; nome no banco = fk_customer_status
  #       type: string
  #       enum:
  #         - 1 [active]
  #         - 2 [inactive]
  #         - 3 [blocked]
  #     reason:
  #       description: motivo alteração
  #       type: string
  #       maxLength: 65535
  #     fk_acl_user:
  #       description: 0tbd mesmo do user do crm? ID do usuário que possui acesso ao BOB; origem = customer_status_history
  #       type: string
  #       maxLength: 10
  #     customer_status_history_created_at:
  #       description: 0tbd se sugar controlar a alteração de status do usuário enviar a data de alteração no crm para ser registrada como data de criação; nome no banco = created_at; origem = customer_status_history
  #       type: string
  #       format: date-time
  get_customer:
    type: object
    description: Campos mapeados em https://docs.google.com/spreadsheets/d/1gyaxrMZ0b_wWDGXxGXdc_lq_MbNiAf8FFAyiQzYmfKA/, os nomes dos campos vão seguir o que foi escrito na planilha
    properties:
      id_customer:
        description: Identificador do cliente
        type: string
      fk_store:
        description: 0del Identificador da loja de origem do customer, no documento cita que só existe o valor 1, porém buscando no banco identifiquei mais 5 valores possíveis que estão preenchidos, se é um campo de origem talvez não fosse necessário atualizar o mesmo, no enum somente as que existem um registro relacionado de customer
        type: string
        enum:
          - 1 [Mobly]
          - 3 [Mercado Livre]
          - 4 [Webcasas]
          - 6 [NovaCom]
          - 7 [Walmart]
          - 10 [CSU]
      store_name:
        description: Nome da loja de origem do Customer, reflete o ID de fk_store; origem = store; nome no banco = name
        type: string
        maxLength: 255
      type:
        description: PF ou PJ
        type: integer
        enum:
          - 1
          - 2
      email:
        description: E-mail do customer, é UNIQUE dentro do banco
        type: string
        maxLength: 255
      is_confirmed:
        description: 0tbd Validação se precisa ser usado, no banco somente valores 0 e 1
        type: integer
        enum:
          - 0
          - 1
      tax_identification:
        description: Número do documento do customer, formato {xxx.xxx.xxx-xx}
        type: string
        maxLength: 64
        pattern: \d{3}.\d{3}.\d{3}-\d{2}
      first_name:
        description: Nome do customer
        type: string
        maxLength: 255
      last_name:
        description: Sobrenome do customer
        type: string
        maxLength: 255
      birthday:
        description: Data de nascimento do customer. Formato {aaaa-mm-dd}
        type: string
        format: date
        maxLength: 10
        pattern: \d{4}-\d{2}-\d{2}
      gender:
        description: Sexo do customer
        type: string
        maxLength: 6
        enum:
          - male
          - female
      company_tax_identification:
        description: CNPJ do customer. Formato {xx.xxx.xxx/xxxx-xx}
        type: string
        maxLength: 64
        pattern: \d{2}.\d{3}.\d{3}\/\d{4}-\d{2}
      legal_name: 
        description: Razão social
        type: string
        maxLength: 255
      fantasy_name:
        description: Nome fantasia
        type: string
        maxLength: 255
      state_tax_number:
        description: Inscrição estadual, formatos variados de valor
        type: string
        maxLength: 255
      state_tax_number_free:
        description: Flag para isento ou não de IE
        type: integer
        enum:
          - 0
          - 1
      fk_customer_address_region:
        description: FK para o estado (customer_address_region) do customer
        type: string
        maxLength: 10
      customer_address_region_name:
        description: Nome da região do fk para essa tabela; origem = customer_address_region; nome no banco = name
        type: string
        maxLength: 255
      id_facebook:
        description: Capta o id do cliente no facebook. Porem não estamos carregando a informação
        type: string
        maxLength: 255
      sms_subscription:
        description: Indica se o customer quer ou não receber sms
        type: integer
        enum:
          - 0
          - 1
      enable_oneclickbuy:
        description: Habilitação da função de One Click Buy pelo usuário
        type: integer
        enum:
          - 0
          - 1
      fk_customer_status_lojamobly:
        description: Habilitar o customer também no Atacarejo. Campo apenas disponível no BOB para o Atacarejo, FK para customer_status_lojamobly
        type: string
        enum:
            - 1 [not applied]
            - 2 [active]
            - 3 [inactive]
            - 4 [pending]
            - 5 [declined]
      customer_status_lojamobly_name:
        description: Nome do status na loja mobly; origem = customer_status_lojamobly; nome no banco = name
        type: string
        enum:
          - not applied
          - active
          - inactive
          - pending
          - declined
        maxLength: 255
      created_at:
        description: Data de criação do customer
        type: string
        format: date-time
      updated_at:
        description: Data de atualização do customer
        type: string
        format: date-time
      fk_customer_status:
        description: Valores das chave do Status do cliente (Ativo/Inativo/Bloqueado). Cliente nasce ativo. Bloqueado é utilizado para clientes com fraude etc
        type: string
        enum:
          - 1 [active]
          - 2 [inactive]
          - 3 [blocked]
      customer_status_name:
        description: Nome do status deve ser igual ao da fk_customer_status; origem = customer_status; nome no banco = name
        type: string
        enum:
          - active
          - inactive
          - blocked
      id_customer_status_history:
        description: ID da tabela de atualização de status de um cliente; origem = customer_status_history
        type: string
        maxLength: 10
      customer_status_history_fk_customer_status:
        description: fk ID do status da tabela de status; origem = customer_status_history; nome no banco = fk_customer_status
        type: string
        enum:
          - 1 [active]
          - 2 [inactive]
          - 3 [blocked]
      reason:
        description: motivo alteração
        type: string
        maxLength: 65535
      fk_acl_user:
        description: 0origem = customer_status_history
        type: string
        maxLength: 10
      customer_status_history_created_at:
        description: Data da criação; nome no banco = created_at; origem = customer_status_history
        type: string
        format: date-time
  update_customer:
    type: object
    description: Campos mapeados em https://docs.google.com/spreadsheets/d/1gyaxrMZ0b_wWDGXxGXdc_lq_MbNiAf8FFAyiQzYmfKA/, os nomes dos campos vão seguir o que foi escrito na planilha
    properties:
      type:
        description: PF ou PJ
        type: integer
        enum:
          - 1
          - 2
      email:
        description: E-mail do customer, é UNIQUE dentro do banco
        type: string
        maxLength: 255
      is_confirmed:
        description: 0tbd Validação se precisa ser usado, no banco somente valores 0 e 1
        type: integer
        enum:
          - 0
          - 1
      tax_identification:
        description: Número do documento do customer, formato {xxx.xxx.xxx-xx}
        type: string
        maxLength: 64
        pattern: \d{3}.\d{3}.\d{3}-\d{2}
      first_name:
        description: Nome do customer
        type: string
        maxLength: 255
      last_name:
        description: Sobrenome do customer
        type: string
        maxLength: 255
      birthday:
        description: Data de nascimento do customer. Formato {aaaa-mm-dd}
        type: string
        format: date
        maxLength: 10
        pattern: \d{4}-\d{2}-\d{2}
      gender:
        description: Sexo do customer
        type: string
        maxLength: 6
        enum:
          - male
          - female
      company_tax_identification:
        description: CNPJ do customer. Formato {xx.xxx.xxx/xxxx-xx}
        type: string
        maxLength: 64
        pattern: \d{2}.\d{3}.\d{3}\/\d{4}-\d{2}
      legal_name: 
        description: Razão social
        type: string
        maxLength: 255
      fantasy_name:
        description: Nome fantasia
        type: string
        maxLength: 255
      state_tax_number:
        description: Inscrição estadual, formatos variados de valor
        type: string
        maxLength: 255
      state_tax_number_free:
        description: Flag para isento ou não de IE
        type: integer
        enum:
          - 0
          - 1
      # @notForUse 
      # fk_customer_address_region:
      #   description: FK para o estado (customer_address_region) do customer
      #   type: string
      #   maxLength: 10
      customer_address_region_name:
        description: Nome da região do fk para essa tabela; origem = customer_address_region; nome no banco = name
        type: string
        maxLength: 255
      id_facebook:
        description: Capta o id do cliente no facebook. Porem não estamos carregando a informação
        type: string
        maxLength: 255
      sms_subscription:
        description: Indica se o customer quer ou não receber sms
        type: integer
        enum:
          - 0
          - 1
      enable_oneclickbuy:
        description: Habilitação da função de One Click Buy pelo usuário
        type: integer
        enum:
          - 0
          - 1
      # @notForUse    
      # fk_customer_status_lojamobly:
      #   description: Habilitar o customer também no Atacarejo. Campo apenas disponível no BOB para o Atacarejo, FK para customer_status_lojamobly
      #   type: string
      #   enum:
      #       - 1 [not applied]
      #       - 2 [active]
      #       - 3 [inactive]
      #       - 4 [pending]
      #       - 5 [declined]
      customer_status_lojamobly_name:
        description: Nome do status na loja mobly; origem = customer_status_lojamobly; nome no banco = name
        type: string
        enum:
          - not applied
          - active
          - inactive
          - pending
          - declined
        maxLength: 255
      updated_at:
        description: Data de atualização do customer
        type: string
        format: date-time
      # @notForUse
      # fk_customer_status:
      #   description: Valores das chave do Status do cliente (Ativo/Inativo/Bloqueado). Cliente nasce ativo. Bloqueado é utilizado para clientes com fraude etc
      #   type: string
      #   enum:
      #     - 1 [active]
      #     - 2 [inactive]
      #     - 3 [blocked]
      customer_status_name:
        description: Nome do status deve ser igual ao da fk_customer_status; origem = customer_status; nome no banco = name
        type: string
        enum:
          - active
          - inactive
          - blocked
      id_customer_status_history:
        description: ID da tabela de atualização de status de um cliente; origem = customer_status_history
        type: string
        maxLength: 10
      customer_status_history_fk_customer_status:
        description: fk ID do status da tabela de status; origem = customer_status_history; nome no banco = fk_customer_status
        type: string
        enum:
          - 1 [active]
          - 2 [inactive]
          - 3 [blocked]
      reason:
        description: motivo alteração
        type: string
        maxLength: 65535
      fk_acl_user:
        description: 0origem = customer_status_history
        type: string
        maxLength: 10
      customer_status_history_created_at:
        description: Data da criação; nome no banco = created_at; origem = customer_status_history
        type: string
        format: date-time
  get_customer_address:
      type: object
      description: Endereço de um customer
      properties:
        code_address:
          description: 0tbd formato; ID único para identificar o endereço nos dois sistemas a fim de evitar que se crie endereços com duplciidade onde deveria ser uma atualização
          type: string
          maxLength: 10
        id_customer_address:
          description: ID único do endereço
          type: string
          maxLength: 10
        first_name:
          description: Nome do resposável do endereço, nem sempre é o mesmo nome do customer
          type: string
          maxLength: 255
        last_name:
          description: Sobrenome do resposável do endereço, nem sempre é o mesmo nome do customer
          type: string
          maxLength: 255
        address1:
          description: Endereço do customer, sem número
          type: string
          maxLength: 500
        address2:
          description: Endereço do customer
          type: string
          maxLength: 500
        city:
          description: Cidade do customer
          type: string
          maxLength: 255
        postalcode:
          description: CEP do customer, formatado padrão br {xxxxx-xxx}
          type: string
          pattern: \d{5}-\d{3}
          maxLength: 15
        phone:
          description: Telefone fixo do endereço formatado padrão br {(zz)xxxx-xxxx}
          type: string 
          pattern: \(\d{2}\)\d{4}-\d{4}
          maxLength: 255
        cell_phone:
          description: Celular do endereço formato {(xx)xxxxx-xxxx}
          type: string
          pattern: \(\d{2}\)\d{5}-\d{4}
          maxLength: 255
        fk_customer:
          description: FK para customer
          type: string
          maxLength: 10
        fk_country:
          description: País do customer
          type: string
          maxLength: 10
        fk_country_name:
          description: Nome do país, referência de fk_country; origem = country; nome do campo = name
          type: string
        fk_customer_address_region:
         description: FK para o Estado do customer
         type: string
         maxLength: 10
        region_name:
          description: Nome do estado; origem = customer_address_region
          type: string
          maxLength: 255
        is_default_billing:
          description: Flag indica se o endereço do customer é de cobrança
          type: string
          enum:
            - 0
            - 1
        is_default_shipping:
          description: Flag indica se o endereço do customer é de entrega
          type: string
          enum:
            - 0
            - 1 
        created_at:
          description: Data de criação do endereço
          type: string
          format: date-time
          maxLength: 19
        updated_at:
          description: Data de atualização do endereço
          type: string
          format: date-time
          maxLength: 19
        complement:
          description: Complemento do endereço do customer
          type: string
          maxLength: 255
        neighborhood:
          description: Bairro do endereço do customer
          type: string
          maxLength: 255
        city_code:
          description: 0del Código IBGE da cidade, serviço que devolve de acordo com o CEP
          type: string
          maxLength: 7
        street_number:
          description: Número do endereço
          type: string
          maxLength: 200
        reference_point:
          description: Ponto de referência do endereço
          type: string
          maxLength: 255
        id_customer_address_region:
          description: ID do estado referencia para fk em customer_address; origem = customer_address_region
          type: string
          maxLength: 10
        customer_address_fk_country:
          description: 0del ID do pais fk para country; origem = customer_address_region
          type: string
          maxLength: 10
        code:
          description: Sigla do estado; origem = customer_address_region
          type: string
          maxLength: 32
  update_customer_address:
      type: object
      description: Endereço de um customer
      properties:
        code_address:
          description: 0tbd formato; ID único para identificar o endereço nos dois sistemas a fim de evitar que se crie endereços com duplciidade onde deveria ser uma atualização
          type: string
          maxLength: 10
        id_customer_address:
          description: ID único do endereço
          type: string
          maxLength: 10
        first_name:
          description: Nome do resposável do endereço, nem sempre é o mesmo nome do customer
          type: string
          maxLength: 255
        last_name:
          description: Sobrenome do resposável do endereço, nem sempre é o mesmo nome do customer
          type: string
          maxLength: 255
        address1:
          description: Endereço do customer, sem número
          type: string
          maxLength: 500
        address2:
          description: Endereço do customer
          type: string
          maxLength: 500
        city:
          description: Cidade do customer
          type: string
          maxLength: 255
        postalcode:
          description: CEP do customer, formatado padrão br {xxxxx-xxx}
          type: string
          pattern: \d{5}-\d{3}
          maxLength: 15
        phone:
          description: Telefone fixo do endereço formatado padrão br {(zz)xxxx-xxxx}
          type: string 
          pattern: \(\d{2}\)\d{4}-\d{4}
          maxLength: 255
        cell_phone:
          description: Celular do endereço formato {(xx)xxxxx-xxxx}
          type: string
          pattern: \(\d{2}\)\d{5}-\d{4}
          maxLength: 255
        # @notForUse
        # fk_customer:
        #   description: FK para customer
        #   type: string
        #   maxLength: 10
        # fk_country:
        #   description: País do customer
        #   type: string
        #   maxLength: 10
        fk_country_name:
          description: Nome do país, referência de fk_country; origem = country; nome do campo = name
          type: string
        # @notForUse
        # fk_customer_address_region:
        #  description: FK para o Estado do customer
        #  type: string
        #  maxLength: 10
        region_name:
          description: Nome do estado; origem = customer_address_region
          type: string
          maxLength: 255
        is_default_billing:
          description: Flag indica se o endereço do customer é de cobrança
          type: string
          enum:
            - 0
            - 1
        is_default_shipping:
          description: Flag indica se o endereço do customer é de entrega
          type: string
          enum:
            - 0
            - 1 
        updated_at:
          description: Data de atualização do endereço
          type: string
          format: date-time
          maxLength: 19
        complement:
          description: Complemento do endereço do customer
          type: string
          maxLength: 255
        neighborhood:
          description: Bairro do endereço do customer
          type: string
          maxLength: 255
        city_code:
          description: 0del Código IBGE da cidade, serviço que devolve de acordo com o CEP
          type: string
          maxLength: 7
        street_number:
          description: Número do endereço
          type: string
          maxLength: 200
        reference_point:
          description: Ponto de referência do endereço
          type: string
          maxLength: 255
        # @notForUse
        # id_customer_address_region:
        #   description: ID do estado referencia para fk em customer_address; origem = customer_address_region
        #   type: string
        #   maxLength: 10
        # customer_address_fk_country:
        #   description: 0del ID do pais fk para country; origem = customer_address_region
        #   type: string
        #   maxLength: 10
        code:
          description: Sigla do estado; origem = customer_address_region
          type: string
          maxLength: 32