swagger: "2.0"
info:
  version: "0.5.0"
  title: Integração SugarCRM - Mobly
  description: 0.5.0 adicionado o modelo do customer, tag 0tbd validar, 0del acho desnecessário em duas vias
host: tbd
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: customer
    description: Requisições que retornam informações do cliente Mobly
  - name: processes
    description: Requisições que retornam informações de processos
paths:
  #block start
  #view do customer apenas, apagar
  /customer:
    get:
      tags:
        - customer
        - processes
      operationId: getCustomer
      responses:
        200:
          description: Customer OK
          schema:
            $ref: "#/definitions/customer"
  #block end
  /customerCart/{customerID}:
    get:
      tags:
        - customer
      summary: Consulta de carrinhos
      description: Retorna os itens do carrinho do cliente que foi passado o ID.
      operationId: getCustomerCart
      parameters:
        - name : customerID
          in: path
          description: ID do consumidor
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/cartResponse"
        400:
          description: Error
          schema:
            $ref: "#/definitions/stdErroMessage"
  /customerRecommendation/{customerID}:
    get:
      tags:
        - customer
      summary: Consulta de recomendação
      description: Retorna um item recomendado para a compra de um cliente
      operationId: getCustomerRecommendation
      parameters:
        - name: customerID
          in: path
          description: ID do consumidor
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/itemRecommended"
        400:
          description: Error
          schema:
            $ref: "#/definitions/stdErroMessage"
  /customerMetrics/{customerID}:
    get:
      tags:
        - customer
      summary: Consulta de métricas
      description: Retorna os indicadores do cliente, as métricas que são enviadas dentro do array podem ter campos adicionados de acordo com a necessidade.Importante anotar que a melhor prática é deixar os campos retornados marcados como não obrigatório do lado do Sugar para manter a flexibilidade de se trabalhar com quaisqer pares de  chaves/valores que forem enviados
      operationId: getCustomerMetrics
      parameters:
        - name: customerID
          in: path
          description: ID do consumidor
          required: true
          type: string
        - name: dashletName
          in: query
          description: Identificador da dashlet que está dando request
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/customerMetrics"
        400:
          description: Cliente não encontrado
          schema:
            $ref: "#/definitions/stdErroMessage"
  /itemEvaluation:
    get:
      tags: 
        - processes
      summary: Consulta de valor de rebate
      description: Envia para o INO os itens que precisam de avaliação para solicitar o rebate, o INO retorna o valor máximo do rebate que pode ser oferecido
      operationId: getItemEvaluation
      parameters:
        - name: item_evaluted
          in: body
          description: Objeto com os itens que devem ser avaliados
          required: true
          schema:
            $ref: "#/definitions/item_evaluated"
      responses:
        200:
          description: Sucess
          schema:
            $ref: "#/definitions/item_evaluated_value"
        400:
          description: Error
          schema:
            $ref: "#/definitions/stdErroMessage"
  /rebateValueApproval:
    post:
      tags:
        - processes
      summary: Pedido de aprovação/registro no INO de rebate
      description: Envia para o INO o valor do rebate escolhido pelo atendente e aguarda a confirmação por parte do INO
      operationId: postRebateValueApproval
      parameters:
        - name: rebate_value
          in: body
          description: Objeto com os items do rebate e o valor do rebate acordado com o cliente
          required: true
          schema:
            $ref: "#/definitions/rebate_value"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/rebate_value_confirmation"
        400:
          description: Error
          schema:
            $ref: "#/definitions/stdErroMessage"
  # /valueRebate/{rebate_itens}:
  #   get:
  #     tags:
  #       - processes
  #     description: Retorna o valor do rebate possível de se oferecer
  #     operationId: getValueRebate
  #     parameters:
  #         - name: rebate_itens
  #           in: path
  #           description: Itens que vão ser considerados no cálculo do rebate
  #           required: true
  #           type: array
  #           items:
  #             name:
  #               type: string
  #     responses:
  #       200:
  #         description: OK
definitions:
  stdErroMessage:
    description: Mensagem de erro a ser usada nas integrações
    type: object
    properties:
      response_status:
        type: string
        description: Indica o código do erro, podemos convencionar a usar os códigos HTTP 400/500 para generalizar
        enum:
          - 400
          - 500
      request_id:
        type: string
        description: Enviar nesse campo o ID da requisição, por exemplo, se for consulta de pedido enviar o ID do pedido, se for de cliente enviar o do cliente, etc
      message:
        type: string
        description: Nesse campo será descrito o erro que aconteceu
  cartResponse:
    type: object
    properties:
      cart_id:
        type: string
      cart_date:
        type: string
        format: date
      cart_itens:
        type: array
        maxLength: 5
        minLength: 0
        items:
          $ref: "#/definitions/cart_itens"
  cart_itens:
    type: object
    properties:
      cart_item_sku:
        type: string
      cart_item_sku_description:
        type: string
      cart_item_sku_color:
        type: string
      cart_item_sku_prev_delivery:
        type: string
        format: date
      cart_item_sku_price:
        type: number
        format: float
      cart_item_sku_img:
        type: string
  itemRecommended:
    type: object
    properties:
      item_name:
        type: string
      item_sku:
        type: string
      item_img:
        type: string
        description: URL do thumbnail do item
      item_factor:
        type: number
        format: float
        description: Porcentagem de eventual compra
  customerMetrics:
    type: object
    properties:
      cst_mtrc_timestamp:
          type: string
          format: date-time
      cst_mtrc_customer_id:
        type: string
        description: Código identificador do cliente
      cst_mtrc_customerMetrics:
        type: array
        description: Métricas enviadas
        minLength: 0
        maxLength: 10
        items:
          $ref: "#/definitions/cst_mtrc_customerMetrics"
  cst_mtrc_customerMetrics:
    type: object
    description: Lista de indicadores por dashlet
    properties:
      cst_mtrc_type:
        type: string
        description: Indica qual o formato que as informações serão renderizadas
      customerMetric_label:
        description: Nome do campo
        type: string
      customerMetric_info:
        description: tbd
        type: string
      customerMetric_value:
        description: Valor
        type: number
        format: float
      customerMetric_total:
        description: Valor total
        type: number
        format: float
  item_evaluated:
    type: object
    description: Itens enviados para o INO para obter a avaliação do rebate
    properties:
      order_id:
        description: ID do pedido
        type: string
      order_items:
        description: Items que são enviados para o INO para serem avaliados
        type: array
        items:
          $ref: "#/definitions/order_items"
  order_items:
    type: object
    description: Items que são enviados para o INO para serem avaliados
    properties:
      order_items_id:
        description: ID do item
        type: string
      order_items_status:
        type: string
        description: Status de cada item 
        enum:
          - Entregue
          - Outros
      order_items_evaluation:
        type: string
        description: Avaliação do item, depende do que for passado no status
        enum:
          - 
          - Avaria
          - Sucata
          - Perfeito Estado
  item_evaluated_value:
    type: object
    description: Retorno do INO com o valor total do rebate
    properties:
      order_id:
        description: ID do pedido
        type: string
      item_evaluated_value_total:
        description: Valor total do rebate
        type: number
        format: float
      iev_order_items:
        description: Lista dos items que foram avaliados
        type: array
        items:
          $ref: "#/definitions/resp_order_items"
  resp_order_items:
    type: object
    description: Lista dos items que foram avaliados
    properties:
      resp_order_items_id:
        description: ID do item
        type: string
      resp_order_items_status:
        description: Status do item, é retornado porque pode ser diferente no INO, preciso pensar como esse valor será armazaenado no sistema, já que foi decidido que teriamos no case a imagem chapada do pedido e seus itens no case/Sugar
        type: string
  rebate_value:
    type: object
    description: Objeto com os items do rebate e o valor do rebate acordado com o cliente
    properties:
      order_id: 
        description: ID do pedido
        type: string
      sugar_crm_user_login:
        description: Login do usuário que está pedindo o rebate
        type: string
      rebate_value_total: 
        description: Valor do rebate
        type: number
        format: float
      rebate_value_order_items:
        type: array
        items:
          $ref: "#/definitions/resp_order_items"
  rebate_value_confirmation:
    type: object
    description: Confirmação do INO que o rebate foi registrado
    properties:
      response_status:
        description: Código HTTP de resposta
        type: string
      order_id:
        description: ID do pedido
        type: string
      message:
        description: Mensagem de confirmação
        type: string
  customer:
    type: object
    description: Campos mapeados em https://docs.google.com/spreadsheets/d/1gyaxrMZ0b_wWDGXxGXdc_lq_MbNiAf8FFAyiQzYmfKA/, os nomes dos campos vão seguir o que foi escrito na planilha
    properties:
      id_customer:
        description: Identificador do cliente; origem = customer
        type: string
      fk_store:
        description: 0tbd 0del;  Identificador da loja de origem do customer, no documento cita que só existe o valor 1, porém buscando no banco identifiquei mais 5 valores possíveis que estão preenchidos, se é um campo de origem talvez não fosse necessário atualizar o mesmo; origem = customer
        type: string
      type:
        description: PF ou PJ; origem = customer
        type: integer
        enum:
          - 1
          - 2
      email:
        description: E-mail do customer, é UNIQUE dentro do banco; origem = customer
        type: string
        maxLength: 255
      is_confirmed:
        description: 0tbd; Validação se precisa ser usado, no banco somente valores 0 e 1; origem = customer
        type: integer
        enum:
          - 1
          - 2
      tax_identification:
        description: Número do documento do customer, formatado; origem = customer
        type: string
        maxLength: 64
      first_name:
        description: Nome do customer; origem = customer
        type: string
        maxLength: 255
      last_name:
        description: Sobrenome do customer; origem = customer
        type: string
        maxLength: 255
      birthdate:
        description: 0tbd confirmar no banco o formato; Data de nascimento do customer, formato aaaa-mm-dd; origem = customer
        type: string
        format: date
        maxLength: 10
      gender:
        description: 0tbd confirmar no banco assumindo agora que é string; Sexo do customer; origem = customer
        type: string
        maxLength: 6
        enum:
          - male
          - female
      company_tax_identification:
        description: 0tbd confirmar no banco, CNPJ se for PJ; origem = customer
        type: string
        maxLength: 64
      legal_name: 
        description: Razão social; origem = customer
        type: string
        maxLength: 255
      fantasy_name:
        description: Nome fantasia; origem = customer
        type: string
        maxLength: 255
      state_tax_number:
        description: 0tbd formato, Inscrição estadual; origem = customer
        type: string
        maxLength: 255
      state_tax_number_free:
        description: 0tbd IE validar formato e valores; Flag para isento ou não de IE; origem = customer
        type: integer
      fk_customer_status:
        description: 0tbd valores; Status do cliente (Ativo/Inativo/Bloqueado). Cliente nasce ativo. Bloqueado é utilizado para clientes com fraude etc; origem = customer
        type: integer
      id_facebook:
        description: 0del Capta o id do cliente no facebook. Porem não estamos carregando a informação; origem = customer
        type: string
      sms_subscriptionn:
        description: 0tbd validar os valores; Indica se o customer quer ou não receber sms; origem = customer
        type: integer
      enable_oneclickbuy:
        description: 0del 0tbd formato se 0,1; Habilitação da função de One Click Buy pelo usuário; origem = customer
        type: integer
      fk_customer_status_lojamobly:
        description: 0tbd formato; Habilitar o customer também no Atacarejo. Campo apenas disponível no BOB para o Atacarejo; origem = customer
        type: integer
      created_at:
        description: 0del não precisaria atualizar esse valor; Data de criação do customer; origem = customer
        type: string
        format: date-time
      updated_at:
        description: Data de atualização do customer; origem = customer
        type: string
        format: date-time
      id_customer_address:
        description: 0tbd 0del; ID único do endereço; origem = customer_address
        type: string
        maxLength: 10
      customer_address_first_name:
        description: Nome do resposável do endereço, nem sempre é o mesmo nome do customer; origem = customer_address
        type: string
        maxLength: 255
      customer_address_last_name:
        description: Sobrenome do resposável do endereço, nem sempre é o mesmo nome do customer; origem = customer_address
        type: string
        maxLength: 255
      address1:
        description: Endereço do customer; origem = customer_address
        type: string
        maxLength: 500
      city:
        description: Cidade do customer; origem = customer_address
        type: string
        maxLength: 255
      postalcode:
        description: CEP do customer, formatado padrão br; origem = customer_address
        type: string
        maxLength: 15
      phone:
        description: Telefone fixo do endereço; formatado padrão br; origem = customer_address
        type: string
        maxLength: 255
      cell_phone:
        description: Celular do endereço; origem = customer_address
      fk_country:
        description: 0del País do customer; origem = customer_address
        type: string
        maxLength: 10
      fk_customer_address_region:
       description: Estado do customer; origem = customer_address
       type: string
       maxLength: 10
      is_default_billing:
        description: Flag indica se o endereço do customer é de cobrança; origem = customer_address
        type: string
        enum:
          - 0
          - 1
      is_default_shipping:
        description: Flag indica se o endereço do customer é de entrega; origem = customer_address
        type: string
        enum:
          - 0
          - 1 
      customer_address_created_at:
        description: 0del Data de criação do endereço; origem = customer_address
        type: string
        format: date-time
        maxLength: 19
      customer_address_updated_at:
        description: Data de atualização do endereço; origem = customer_address
        type: string
        maxLength: 19
      complement:
        description: Complemento do endereço do customer; origem = customer_address
        type: string
        maxLength: 255
      neighborhood:
        description: Bairro do endereço do customer; origem = customer_address
        type: string
        maxLength: 255
      city_code:
        description: 0del Código IBGE da cidade, serviço que devolve de acordo com o CEP; origem = customer_address
        type: string
        maxLength: 7
      street_number:
        description: Número do endereço; origem = customer_address
        type: string
        maxLength: 200
      reference_point:
        description: Ponto de referência do endereço; origem = customer_address
        type: string
        maxLength: 255
      id_customer_address_region:
        description: ID do estado referencia para fk em customer_address ; origem = customer_address_region
        type: string
        maxLength: 10
      customer_address_region_fk_country:
        description: 0del ID do pais fk para country; origem = customer_address_region
        type: string
        maxLength: 10
      code:
        description: Sigla do estado; origem = customer_address_region
        type: string
        maxLength: 32
      customer_address_region_name:
        description: Nome do estado; origem = customer_address_region
        type: string
        maxLength: 255
      id_customer_status:
        description: ID que identifica qual o status do cliente; origem = customer_status
        type: string
        enum:
          - 1
          - 2
          - 3
      customer_status_name:
        description: 0del mandar o id é o suficiente; Nome do status; origem = customer_status
        type: string
        enum:
          - active [1]
          - inactive [2]
          - blocked [3]
      id_customer_status_history:
        description: 0del 0tbd acho desnecessário no momento; id da tabela de atualização de status de um cliente; origem = customer_status_history
        type: string
        maxLength: 10
      fk_customer:
        description: 0del a chave de ID do cliente já é obtida na tabela customer; ID do customer que está atualizando o status
        type: string
        maxLength: 10
      customer_status_history_fk_customer_status:
        description: fk ID do status da tabela de status; origem = customer_status_history
        type: string
        enum:
          - 1
          - 2
          - 3
      reason:
        description: motivo alteração; origem = customer_status_history
        type: string
        maxLength: 65535
      fk_acl_user:
        description: 0tbd mesmo do user do crm?; ID do usuário que possui acesso ao BOB; origem = customer_status_history
        type: string
        maxLength: 10
      customer_status_history_created_at:
        description: 0tbd se sugar controlar a alteração de status do usuário enviar a data de alteração no crm para ser registrada como data de criação
        type: string
        format: date-time


